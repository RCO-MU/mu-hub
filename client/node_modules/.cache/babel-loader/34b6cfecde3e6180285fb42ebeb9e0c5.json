{"ast":null,"code":"var _jsxFileName = \"/Users/rco/Downloads/Repositories/mu-hub-1/client/src/components/AccountCreate/AccountCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport axios from 'axios';\nimport './AccountCreate.css';\nimport { useState } from 'react';\nimport Loader from '../Loader/Loader';\nimport delay from '../../utils/delay';\nimport refreshPage from '../../utils/refreshPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountCreate(_ref) {\n  _s();\n\n  let {\n    loading,\n    setLoading,\n    setCookie\n  } = _ref;\n  // **********************************************************************\n  // STATE VARIABLES AND FUNCTIONS\n  // **********************************************************************\n  const [unixname, setUnixname] = useState('');\n  const [name, setName] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [error, setError] = useState(''); // **********************************************************************\n  // AXIOS FUNCTIONS (POST)\n  // **********************************************************************\n\n  /*\n    Posts data to backend /api/user endpoint using axios.\n    loading is true while this function runs and false otherwise.\n      (loading -> false is handled by page refresh in client function)\n    Adds user account with unixname, full name, and role (intern/admin) to database.\n    Sets cookie information to loggedIn: true, user: unixname.\n    If an error occurs, the error is logged.\n  */\n\n  async function postNewAccount() {\n    setLoading(true);\n\n    try {\n      const url = 'api/user' + `?unixname=${unixname}` + `&name=${name}` + `&role=${isAdmin ? 'admin' : 'intern'}`;\n      await axios.post(url);\n      setCookie('data', {\n        loggedIn: true,\n        user: unixname\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  } // **********************************************************************\n  // HANDLER FUNCTIONS\n  // **********************************************************************\n\n\n  const handleOnAccountSubmit = async () => {\n    if (unixname === '') {\n      setError('Please enter your unixname.');\n    } else if (name === '') {\n      setError('Please enter your name.');\n    } else {\n      setError('');\n      await postNewAccount();\n      await delay(3000); // artificial delay for occasional database latency\n\n      refreshPage();\n    }\n  }; // **********************************************************************\n  // PAGE RENDERING\n  // **********************************************************************\n  // loading\n\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  } // else if not loading\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AccountCreate\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This is a temporary page. All of this information will eventually be retrieved via SSO integration.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"unixname\",\n      children: ['Unixname: ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"unixname\",\n        className: \"input-field text ac\",\n        name: \"unixname\",\n        onChange: e => setUnixname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Name\",\n      children: ['Name: ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        className: \"input-field text ac\",\n        name: \"name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"is-admin\",\n      children: ['Are you an admin? ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"is-admin\",\n        className: \"input-field checkbox ac\",\n        name: \"is-admin\",\n        onChange: () => setIsAdmin(!isAdmin)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"action-button ac\",\n      type: \"submit\",\n      value: \"Continue\",\n      onClick: handleOnAccountSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountCreate, \"B1Ddxu3H4gaU4UF1/+sFh8OQRDI=\");\n\n_c = AccountCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountCreate\");","map":{"version":3,"names":["React","axios","useState","Loader","delay","refreshPage","AccountCreate","loading","setLoading","setCookie","unixname","setUnixname","name","setName","isAdmin","setIsAdmin","error","setError","postNewAccount","url","post","loggedIn","user","err","console","handleOnAccountSubmit","e","target","value"],"sources":["/Users/rco/Downloads/Repositories/mu-hub-1/client/src/components/AccountCreate/AccountCreate.jsx"],"sourcesContent":["import * as React from 'react';\nimport axios from 'axios';\nimport './AccountCreate.css';\nimport { useState } from 'react';\nimport Loader from '../Loader/Loader';\nimport delay from '../../utils/delay';\nimport refreshPage from '../../utils/refreshPage';\n\nexport default function AccountCreate({\n  loading, setLoading, setCookie,\n}) {\n  // **********************************************************************\n  // STATE VARIABLES AND FUNCTIONS\n  // **********************************************************************\n\n  const [unixname, setUnixname] = useState('');\n  const [name, setName] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [error, setError] = useState('');\n\n  // **********************************************************************\n  // AXIOS FUNCTIONS (POST)\n  // **********************************************************************\n\n  /*\n    Posts data to backend /api/user endpoint using axios.\n    loading is true while this function runs and false otherwise.\n      (loading -> false is handled by page refresh in client function)\n    Adds user account with unixname, full name, and role (intern/admin) to database.\n    Sets cookie information to loggedIn: true, user: unixname.\n    If an error occurs, the error is logged.\n  */\n  async function postNewAccount() {\n    setLoading(true);\n    try {\n      const url = 'api/user'\n      + `?unixname=${unixname}`\n      + `&name=${name}`\n      + `&role=${isAdmin ? 'admin' : 'intern'}`;\n      await axios.post(url);\n      setCookie('data', {\n        loggedIn: true,\n        user: unixname,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // **********************************************************************\n  // HANDLER FUNCTIONS\n  // **********************************************************************\n\n  const handleOnAccountSubmit = async () => {\n    if (unixname === '') {\n      setError('Please enter your unixname.');\n    } else if (name === '') {\n      setError('Please enter your name.');\n    } else {\n      setError('');\n      await postNewAccount();\n      await delay(3000); // artificial delay for occasional database latency\n      refreshPage();\n    }\n  };\n\n  // **********************************************************************\n  // PAGE RENDERING\n  // **********************************************************************\n\n  // loading\n  if (loading) {\n    return <Loader />;\n  }\n  // else if not loading\n  return (\n    <div className=\"AccountCreate\">\n      <h1>Account Info</h1>\n      <h2>\n        This is a temporary page.\n        All of this information will eventually be retrieved via SSO integration.\n      </h2>\n      <label htmlFor=\"unixname\">\n        {'Unixname: '}\n        <br />\n        <input\n          type=\"text\"\n          id=\"unixname\"\n          className=\"input-field text ac\"\n          name=\"unixname\"\n          onChange={(e) => setUnixname(e.target.value)}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"Name\">\n        {'Name: '}\n        <br />\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input-field text ac\"\n          name=\"name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"is-admin\">\n        {'Are you an admin? '}\n        <input\n          type=\"checkbox\"\n          id=\"is-admin\"\n          className=\"input-field checkbox ac\"\n          name=\"is-admin\"\n          onChange={() => setIsAdmin(!isAdmin)}\n        />\n      </label>\n      <br />\n      <input\n        className=\"action-button ac\"\n        type=\"submit\"\n        value=\"Continue\"\n        onClick={handleOnAccountSubmit}\n      />\n      <h3>{error}</h3>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}