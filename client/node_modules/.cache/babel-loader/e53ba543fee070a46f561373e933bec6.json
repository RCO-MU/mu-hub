{"ast":null,"code":"var _jsxFileName = \"/Users/rco/Downloads/Repositories/mu-hub-1/client/src/components/DocumentUpload/DocumentUpload.jsx\",\n    _s = $RefreshSig$();\n\n/* ADAPTED FROM https://github.com/trananhtuat/react-drop-file-input */\nimport * as React from 'react';\nimport axios from 'axios';\nimport './DocumentUpload.css';\nimport FormData from 'form-data';\nimport { useState } from 'react';\nimport ImageConfig from '../../utils/images';\nimport uploadImg from '../../data/images/cloud-upload-regular-240.png';\nimport Loader from '../Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DocumentUpload(_ref) {\n  _s();\n\n  let {\n    userInfo,\n    loading,\n    setLoading\n  } = _ref;\n  // **********************************************************************\n  // STATE VARIABLES AND FUNCTIONS\n  // **********************************************************************\n  const [fileList, setFileList] = useState([]); // **********************************************************************\n  // HELPER FUNCTIONS (file list manipulation)\n  // **********************************************************************\n\n  const onFileDrop = e => {\n    const newFile = e.target.files[0];\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n    }\n  };\n\n  function fileRemove(file) {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n  } // **********************************************************************\n  // AXIOS FUNCTIONS (POST)\n  // **********************************************************************\n\n  /* Saves a file to database */\n\n\n  async function uploadFile(file) {\n    setLoading(true);\n\n    try {\n      // axios parameters\n      const form = new FormData();\n      form.append('file', file);\n      form.append('unixname', userInfo.unixname); // call axios\n\n      const url = 'api/upload/';\n      const {\n        data\n      } = await axios.post(url, form, {\n        headers: form.getHeaders ? form.getHeaders() : {\n          'Content-Type': 'multipart/form-data'\n        }\n      }); // print server resposnse\n\n      console.log('response from server: ', data);\n      fileRemove(file);\n      return data;\n    } catch (err) {\n      console.error(err);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  } // **********************************************************************\n  // HANDLER FUNCTIONS\n  // **********************************************************************\n\n\n  function handleFileUpload() {\n    fileList.forEach(file => uploadFile(file));\n  } // **********************************************************************\n  // PAGE RENDERING\n  // **********************************************************************\n  // loading\n\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DocumentUpload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Upload your documents here:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-file-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-input-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click OR Drag and Drop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        value: \"\",\n        onChange: onFileDrop,\n        encType: \"multipart/form-data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), fileList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"drop-file-preview-title\",\n        children: \"Files to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), fileList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-preview-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ImageConfig[item.type.split('/')[1]] || ImageConfig.default,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-file-preview-item-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"button\",\n          tabIndex: 0,\n          onKeyDown: () => {},\n          className: \"drop-file-preview-item-del\",\n          onClick: () => fileRemove(item),\n          style: {\n            color: 'red',\n            fontSize: 'x-large'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this)]\n      }, `file${index + 1}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"action-button\",\n        type: \"submit\",\n        value: \"Upload\",\n        onClick: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo: Display previously uploaded files or file upload error.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DocumentUpload, \"DPlwTHyoomOmUEJyEefg5NxYD/w=\");\n\n_c = DocumentUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentUpload\");","map":{"version":3,"names":["React","axios","FormData","useState","ImageConfig","uploadImg","Loader","DocumentUpload","userInfo","loading","setLoading","fileList","setFileList","onFileDrop","e","newFile","target","files","updatedList","fileRemove","file","splice","indexOf","uploadFile","form","append","unixname","url","data","post","headers","getHeaders","console","log","err","error","handleFileUpload","forEach","length","map","item","index","type","split","default","name","color","fontSize"],"sources":["/Users/rco/Downloads/Repositories/mu-hub-1/client/src/components/DocumentUpload/DocumentUpload.jsx"],"sourcesContent":["/* ADAPTED FROM https://github.com/trananhtuat/react-drop-file-input */\nimport * as React from 'react';\nimport axios from 'axios';\nimport './DocumentUpload.css';\nimport FormData from 'form-data';\nimport { useState } from 'react';\nimport ImageConfig from '../../utils/images';\nimport uploadImg from '../../data/images/cloud-upload-regular-240.png';\nimport Loader from '../Loader/Loader';\n\nexport default function DocumentUpload({ userInfo, loading, setLoading }) {\n  // **********************************************************************\n  // STATE VARIABLES AND FUNCTIONS\n  // **********************************************************************\n\n  const [fileList, setFileList] = useState([]);\n\n  // **********************************************************************\n  // HELPER FUNCTIONS (file list manipulation)\n  // **********************************************************************\n\n  const onFileDrop = (e) => {\n    const newFile = e.target.files[0];\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n    }\n  };\n\n  function fileRemove(file) {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n  }\n\n  // **********************************************************************\n  // AXIOS FUNCTIONS (POST)\n  // **********************************************************************\n\n  /* Saves a file to database */\n  async function uploadFile(file) {\n    setLoading(true);\n    try {\n      // axios parameters\n      const form = new FormData();\n      form.append('file', file);\n      form.append('unixname', userInfo.unixname);\n\n      // call axios\n      const url = 'api/upload/';\n      const { data } = await axios.post(url, form, {\n        headers: form.getHeaders ? form.getHeaders() : { 'Content-Type': 'multipart/form-data' },\n      });\n\n      // print server resposnse\n      console.log('response from server: ', data);\n\n      fileRemove(file);\n      return data;\n    } catch (err) {\n      console.error(err);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // **********************************************************************\n  // HANDLER FUNCTIONS\n  // **********************************************************************\n\n  function handleFileUpload() {\n    fileList.forEach((file) => uploadFile(file));\n  }\n\n  // **********************************************************************\n  // PAGE RENDERING\n  // **********************************************************************\n\n  // loading\n  if (loading) {\n    return <Loader />;\n  }\n  return (\n    <div className=\"DocumentUpload\">\n      <h2 className=\"header\">\n        Upload your documents here:\n      </h2>\n      <div\n        className=\"drop-file-input\"\n      >\n        <div className=\"drop-file-input-label\">\n          <img src={uploadImg} alt=\"\" />\n          <p>Click OR Drag and Drop</p>\n        </div>\n        <input type=\"file\" name=\"file\" value=\"\" onChange={onFileDrop} encType=\"multipart/form-data\" />\n      </div>\n      {\n        fileList.length > 0 ? (\n          <div className=\"drop-file-preview\">\n            <p className=\"drop-file-preview-title\">\n              Files to upload\n            </p>\n            {\n              fileList.map((item, index) => (\n                <div key={`file${index + 1}`} className=\"drop-file-preview-item\">\n                  <img src={ImageConfig[item.type.split('/')[1]] || ImageConfig.default} alt=\"\" />\n                  <div className=\"drop-file-preview-item-info\">\n                    <p>{item.name}</p>\n                  </div>\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => {}}\n                    className=\"drop-file-preview-item-del\"\n                    onClick={() => fileRemove(item)}\n                    style={{ color: 'red', fontSize: 'x-large' }}\n                  >\n                    <b>x</b>\n                  </span>\n                </div>\n              ))\n            }\n            <input\n              className=\"action-button\"\n              type=\"submit\"\n              value=\"Upload\"\n              onClick={handleFileUpload}\n            />\n          </div>\n        ) : <h2>Todo: Display previously uploaded files or file upload error.</h2>\n      }\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}